#
# Copyright 2020, Dave Slotter (W3DJS). All rights reserved.
#

- name: Configuration Tasks
  hosts: all
  tasks:

  - name: Change hostname to hampi (for current session)
    become: yes
    command: hostname -b hampi

  - name: Change hostname to hampi (permanently)
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/hostname"
      dest: "/etc/hostname"

  - name: Change hostname to hampi (for hosts file)
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/hosts"
      dest: "/etc/hosts"

  - name: Store a basic version file in public location
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/hampi-release"
      dest: "/etc/hampi-release"

  - name: Check that the /boot/cmdline.txt exists
    stat:
      path: /boot/cmdline.txt
    register: cmdline_stat_result

  - name: Enable resizing of (micro)SD card
    become: yes
    command: sed -i 's/ quiet splash plymouth.ignore-serial-consoles$/ quiet init=\/usr\/lib\/raspi-config\/init_resize.sh splash plymouth.ignore-serial-consoles/' /boot/cmdline.txt
    args:
      warn: no
    when: cmdline_stat_result.stat.exists

  - name: Remove unwanted software packages
    become: yes
    package:
      name: "{{ item }}"
      state: absent
    with_items:
      - wolfram-engine
      - wolframscript
      - bluej
      - greenfoot-unbundled
      - minecraft-pi

  # This allows apt-add-repository command to be added
  - name: Install software-properties-common Packages
    become: yes
    package:
      name: software-properties-common
      state: present

  - name: Install powermgmt-base Package for unattended-upgrades
    become: yes
    package:
      name: powermgmt-base
      state: present

  - name: Enable mail notifications for unattended-upgrades
    become: yes
    lineinfile:
      path: /etc/apt/apt.conf.d/50unattended-upgrades
      regexp: '^\/\/Unattended-Upgrade::Mail \"\";'
      line: Unattended-Upgrade::Mail "pi";

  - name: Add the user 'pi' to group of 'dialout'
    user:
      name: {{ pi_user }}
      groups: dialout
      append: yes

  - name: Add the user 'pi' to group of 'plugdev'
    user:
      name: {{ pi_user }}
      groups: plugdev
      append: yes

  # Only apply these next two steps to RPi3 and RPi4
  # Note: backup: yes cannot be used on /boot filesystem as
  # it creates an invalid filename pattern which causes this
  # to fail
  #  - name: Configure Pi to use 64-bit kernel
  #  become: yes
  #  blockinfile:
  #    dest: /boot/config.txt
  #    block: |
  #      arm_64bit=1
  #  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

  # - name: Update Pi to use 64-bit Kernel
  #   become: yes
  #   command: echo "y" | rpi-update
  #   when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

  - name: Enable VNC Server (32 bit ARM)
    become: yes
    systemd:
      name: vncserver
      enabled: yes
      state: started
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"
    ignore_errors: yes

#  - name: Enable Pi VNC Server (32 bit ARM)
#    become: yes
#    file:
#      dest: /etc/systemd/system/multi-user.target.wants/vncserver-x11-serviced.service
#      src: /usr/lib/systemd/system/vncserver-x11-serviced.service
#      state: link
#    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"
#    ignore_errors: yes
#
#  - name: Start Pi VNC Server (32 bit ARM)
#    become: yes
#    command: systemctl start vncserver-x11-serviced
#    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"
#    ignore_errors: yes

  - name: Install Pi VNC Server (64 bit ARM)
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - tightvncserver
    when: ansible_architecture == "aarch64"

  - name: Create /etc/xdg/pcmanfm/LXDE-pi directory
    become: yes
    file:
      path: /etc/xdg/pcmanfm/LXDE-pi
      state: directory

  - name: Create HamPi desktop config 0 in /etc/xdg/pcmanfm/LXDE-pi
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/xdg/pcmanfm/LXDE-pi/desktop-items-0.conf"
      dest: "/etc/xdg/pcmanfm/LXDE-pi/desktop-items-0.conf"

  - name: Create HamPi desktop config 1 in /etc/xdg/pcmanfm/LXDE-pi
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/xdg/pcmanfm/LXDE-pi/desktop-items-1.conf"
      dest: "/etc/xdg/pcmanfm/LXDE-pi/desktop-items-1.conf"

  - name: Create ~/.config/pcmanfm/LXDE-pi directory
    file:
      path: "/home/{{ pi_user }}/.config/pcmanfm/LXDE-pi"
      state: directory

  - name: Create HamPi desktop config in ~/.config/pcmanfm/LXDE-pi
    copy:
      src: "{{ playbook_dir }}/../files/home/{{ pi_user }}/.config/pcmanfm/LXDE-pi/desktop-items-0.conf"
      dest: "/home/{{ pi_user }}/.config/pcmanfm/LXDE-pi/desktop-items-0.conf"

  - name: Create /etc/lightdm
    become: yes
    file:
      path: /etc/lightdm
      state: directory

  - name: Create HamPi greeter config in /etc/
    become: yes
    copy:
      src: "{{ playbook_dir }}/../files/etc/lightdm/pi-greeter.conf"
      dest: "/etc/lightdm/pi-greeter.conf"

  - name: Create /home/{{ pi_user }}/Desktop directory
    file:
      path: "/home/{{ pi_user }}/Desktop"
      state: directory

  - name: Create HamPi README in ~/Desktop
    copy:
      src: "{{ playbook_dir }}/../files/home/{{ pi_user }}/Desktop/HAMPI README.doc"
      dest: "/home/{{ pi_user }}/Desktop/HAMPI README.doc"

  - name: Create HamPi LICENSE in /home/{{ pi_user }}/Desktop
    copy:
      src: "{{ playbook_dir }}/../files/home/{{ pi_user }}/Desktop/HAMPI LICENSE.TXT"
      dest: "/home/{{ pi_user }}/Desktop/HAMPI LICENSE.TXT"

  - name: Create GIVE BACK in /home/{{ pi_user }}/Desktop
    copy:
      src: "{{ playbook_dir }}/../files/home/{{ pi_user }}/Desktop/GIVE BACK.PDF"
      dest: "/home/{{ pi_user }}/Desktop/GIVE BACK.PDF"

  - name: Insert .bash_local configuration
    blockinfile:
      dest: /home/{{ pi_user }}/.bash_local
      create: yes
      block: |
        # BUILD OPTIONS
        export MAKEFLAGS="-j `grep processor /proc/cpuinfo | wc -l`"
        export CXXFLAGS='-O2 -march=native -mtune=native'
        export CFLAGS='-O2 -march=native -mtune=native'
        LIBRARY_PATH='/usr/local/lib'
        INCLUDE_PATH='/usr/local/include'
        # For using XTRX and SoapySDR with SDRAngel:
        export LD_LIBRARY_PATH=/usr/local/lib:/opt/install/xtrx-images/lib:$LD_LIBARY_PATH

        # TO PERMIT LAUNCHING X-WINDOWS APPS FROM TERMINAL
        export DISPLAY=:0

        # FIX WSJT-X POPUP BAND/FREQUENCY MENU DISPLAY
        export QT_QPA_PLATFORMTHEME=cleanlooks

        # QRZ.COM AUTHENTICATION FOR WSJTX_TO_N3FJP LOG ADAPTER
        export QRZ_USERNAME=FILLIN
        export QRZ_PASSWORD=FILLIN

  - name: Insert .bashrc configuration
    blockinfile:
      dest: "/home/{{ pi_user }}/.bashrc"
      block: |
        if [ -f ~/.bash_local ]; then
            . ~/.bash_local
        fi
